###EL IMPACTO DE PROSPERA###


#Base de datos

setwd("C:/Users/Samuelk/Documents/ITAM/Econo Comp/Nueva carpeta/Database")

#Cargamos las bases originales
hog <- as.data.frame(read.csv("hogares.csv"))
ing <- as.data.frame(read.csv("ingreso.csv"))
pob <- as.data.frame(read.csv("poblacion.csv"))
trab <- as.data.frame(read.csv("trabajos.csv"))
viv <- as.data.frame(read.csv("viviendas.csv"))

#Identificamos los hogares que tienen ingresos por prospera 
pros <- subset(ing, clave == "P042", select = c(folioviv, foliohog, numren))
pros$prospera <- 1
pros <- pros[!duplicated(pros), ]

#Merge 1
m1 <- merge(pros, pob, by=c("folioviv","foliohog","numren"), all = TRUE)

#Identificamos los empleados informales 
trabinf <- subset(trab, medtrab_7 == 7, select = c(folioviv, foliohog, numren))
trabinf$trabinf <- 1
trabinf <- trabinf[!duplicated(trabinf), ]

#merge 2
m2 <- merge(trabinf,m1, by=c("folioviv","foliohog","numren"), all = TRUE)

#identificamos hogares que se preocuparon por comer
alim <- subset(hog, select = c(1,2,7,36:39,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90, 92, 94,96))
alim <- alim[!duplicated(alim), ]

#merge 3
m3 <- merge(alim,m2,by=c("folioviv","foliohog"), all = TRUE)

#merge 4
m4 <- merge(m3,viv,by=c("folioviv"), all = TRUE)

#llenamos los nas con 0s
m4$trabinf[is.na(m4$trabinf)] <- 0
m4$prospera[is.na(m4$prospera)] <- 0
m4$acc_alim1=ifelse(m4$acc_alim1==1,1,0)

#Guardamos la base
save(m4, file = "database.RData")



##### LIMPIEZA DE DATOS ####
###Quitamos las variables subindentificadoras que no
library(tidyverse)
m4<- select(m4,- num_dueno1,- num_dueno1, - hog_dueno2,- conyuge_id,
            - padre_id,- madre_id, -lenguaind)

#Discapacidad
#Para esta variable decidimos dejar solo una dummy que indica
#si tiene o no algún tipo de discapacidad
m4$disc<-ifelse(m4$disc1==8,0,1)
#Elimianos las variables de la base y las causas porque creemps
#Que no son relevantes para el análisis. 
#De igual forma 

m4<-select(m4, - disc1, -disc2, - disc3, -disc4,
           -disc5, -disc6, -disc7, -causa1, -causa2,
           -causa3,-causa4,-causa5,-causa6,-causa7)


m4<-select(m4, -redsoc_1,-redsoc_2,-redsoc_3,-redsoc_4,-redsoc_5,-redsoc_6,-usotiempo2,-usotiempo3,-usotiempo3,-usotiempo4,-usotiempo5,-usotiempo6,-usotiempo7,-usotiempo8,
           -inst_1,-inst_2,-inst_3,-inst_4,-inst_5,-inst_6, -min_1,-min_2,-min_3,-min_4,-min_5,-min_6,-min_7,-min_8)

m4<-select(m4, -inscr_1,-inscr_2,-inscr_3,-inscr_4,-inscr_5,-inscr_6,-inscr_7,-inscr_8,-prob_anio,-prob_mes,-razon_1,-razon_2,-razon_3,-razon_4,-razon_5,-razon_6,-razon_7,
           -razon_8,-razon_9,-razon_10,-razon_11
)

m4<-select(m4, -num_dueno2,-escrituras,-viv_usada,-tipo_adqui,-pago_viv,-estim_pago, -estufa_chi, -cocina_dor, -antigua_ne, -antiguedad,-num_trabaj,-act_pnea2,-motivo_aus,
           -trabajo_mp,-hijos_sob,-hijos_mue,-hijos_viv,-pres_alta,-diabetes,-peso, -noatenc_1,-noatenc_2,-noatenc_3,-noatenc_4,-noatenc_5,-noatenc_6,-noatenc_7,-noatenc_8,
           -noatenc_9,-noatenc_10,-noatenc_11,-noatenc_12,-noatenc_13,-noatenc_14,-noatenc_15,-noatenc_16,-hh_lug,-mm_lug,-hh_esp,-mm_esp,-prob_sal,-aten_sal,-usotiempo1,
           -ss_aa, -ss_mm,-pareja_hog,-edo_conyug,-residencia,-antec_esc,-forma_c,-otorg_c,-forma_b,-nivel,-grado, -comprenind)

m4<-select(m4, -hablaesp)

m4 <- m4 %>% 
  mutate(
    secundaria = case_when( 
      nivelaprob == 3 &  gradoaprob >2 ~ 1,
      nivelaprob > 3 ~ 1,
      nivelaprob == 3 &  gradoaprob <3 ~ 0,
      nivelaprob < 3 ~ 0,
    )
  )


m4<-select(m4, -nivelaprob,-gradoaprob)

mssng <- as.data.frame(sapply(m4, function(x) sum(is.na(x))))
colnames(mssng) <- c("MV")
mssng

m4<-select(m4,-hor_3,-hor_5)

m4$hor_1[is.na(m4$hor_1)] <- 0
m4$hor_2[is.na(m4$hor_2)] <- 0
m4$hor_4[is.na(m4$hor_4)] <- 0
m4$hor_6[is.na(m4$hor_6)] <- 0
m4$hor_7[is.na(m4$hor_7)] <- 0
m4$hor_8[is.na(m4$hor_8)] <- 0
m4$renta[is.na(m4$renta)] <- 0
m4$segvol_1[is.na(m4$segvol_1)] <- 0
m4$segvol_2[is.na(m4$segvol_2)] <- 0
m4$segvol_3[is.na(m4$segvol_3)] <- 0
m4$segvol_4[is.na(m4$segvol_4)] <- 0
m4$segvol_5[is.na(m4$segvol_5)] <- 0
m4$segvol_6[is.na(m4$segvol_6)] <- 0
m4$segvol_7[is.na(m4$segvol_7)] <- 0

m4$norecib_1[is.na(m4$norecib_1)] <- 0
m4$norecib_2[is.na(m4$norecib_2)] <- 0
m4$norecib_3[is.na(m4$norecib_3)] <- 0
m4$norecib_4[is.na(m4$norecib_4)] <- 0
m4$norecib_5[is.na(m4$norecib_5)] <- 0
m4$norecib_6[is.na(m4$norecib_6)] <- 0
m4$norecib_7[is.na(m4$norecib_7)] <- 0
m4$norecib_8[is.na(m4$norecib_8)] <- 0
m4$norecib_9[is.na(m4$norecib_9)] <- 0
m4$norecib_10[is.na(m4$norecib_10)] <- 0
m4$norecib_11[is.na(m4$norecib_11)] <- 0

m4$pagoaten_1[is.na(m4$pagoaten_1)] <- 0
m4$pagoaten_2[is.na(m4$pagoaten_2)] <- 0
m4$pagoaten_3[is.na(m4$pagoaten_3)] <- 0
m4$pagoaten_4[is.na(m4$pagoaten_4)] <- 0
m4$pagoaten_5[is.na(m4$pagoaten_5)] <- 0
m4$pagoaten_6[is.na(m4$pagoaten_6)] <- 0
m4$pagoaten_7[is.na(m4$pagoaten_7)] <- 0

m4$servmed_1[is.na(m4$servmed_1)] <- 0
m4$servmed_2[is.na(m4$servmed_2)] <- 0
m4$servmed_3[is.na(m4$servmed_3)] <- 0
m4$servmed_4[is.na(m4$servmed_4)] <- 0
m4$servmed_5[is.na(m4$servmed_5)] <- 0
m4$servmed_6[is.na(m4$servmed_6)] <- 0
m4$servmed_7[is.na(m4$servmed_7)] <- 0
m4$servmed_8[is.na(m4$servmed_8)] <- 0
m4$servmed_9[is.na(m4$servmed_9)] <- 0
m4$servmed_10[is.na(m4$servmed_10)] <- 0
m4$servmed_11[is.na(m4$servmed_11)] <- 0

m4<-select(m4,-segsoc)


mssng <- as.data.frame(sapply(m4, function(x) sum(is.na(x))))
colnames(mssng) <- c("MV")
mssng

save(m4, file = "basebonita.RData")

##CORRELACIÓN #### 

correlaciones<-cor( m4 %>% select(-foliohog,-folioviv,-numren,-tipo_finan,
                                  -combustible, -mat_pisos, -tipo_viv))


ordenado<-as.data.frame(as.table(correlaciones))
ordenado<-subset(ordenado,abs(Freq)>0.95)
ordenado<-subset(ordenado,Var1!=Var2)
colnames(ordenado) <- c("Var1","Var2","corr")

kbl(ordenado, booktabs = T, caption = "<center><strong>Pares con correlación>95%</strong></center>") %>% kable_classic_2(full_width = F, html_font = "Cambria", fixed_thead = T)


m4<-select(m4,-est_dis, -upm, -ubica_geo)



### REVISAR laas variables DESBALANCEADAS #####
tabla <- balance_table(select(m4,-foliohog,-folioviv,-numren,-tipo_finan,
                              -combustible, -mat_pisos, -tipo_viv), treatment="prospera")
desbalance<-subset(tabla,p_value1>0.05)

kbl(tabla, booktabs = T, caption = "<center><strong>Variables desbalanceadas</strong></center>") %>% kable_classic_2(full_width = F, html_font = "Cambria", fixed_thead = T)
kbl(desbalance, booktabs = T, caption = "<center><strong>Variables desbalanceadas</strong></center>") %>% kable_classic_2(full_width = F, html_font = "Cambria", fixed_thead = T)

####PRUEBA F #######

regress <- balance_regression(select(m4,-foliohog,-folioviv,-numren,-tipo_finan,
                                     -combustible, -mat_pisos, -tipo_viv), treatment="prospera")
efe<-regress$F_test

kbl(efe, booktabs = T, caption = "<center><strong>Prueba F</strong></center>") %>% kable_classic_2(full_width = F, html_font = "Cambria", fixed_thead = T)



#########Nuevos ajustes a la base##########
m4<-select(m4,-etnia,-asis_esc,-tipoesc,-tiene_b,-otorg_b,-tiene_c,-act_pnea1,-dotac_agua,-pago_mesp,-hog_dueno1)
m4<-select(m4,-uso_compar,-sanit_agua,-biodigest,-bano_comp,-bano_excus,-bano_regad)
m4<-m4[complete.cases(m4), ]


save(m4, file = "basebonita.RData")


correlaciones<-cor( m4 %>% select(-foliohog,-folioviv,-numren,-tipo_finan,
                                  -combustible, -mat_pisos, -tipo_viv))


ordenado<-as.data.frame(as.table(correlaciones))
ordenado<-subset(ordenado,abs(Freq)>0.95)
ordenado<-subset(ordenado,Var1!=Var2)
colnames(ordenado) <- c("Var1","Var2","corr")

kbl(ordenado, booktabs = T, caption = "<center><strong>Pares con correlación>95%</strong></center>") %>% kable_classic_2(full_width = F, html_font = "Cambria", fixed_thead = T)

m4<-select(m4,-est_dis, -upm, -ubica_geo)


set.seed(1990)
m4<-
  m4 %>% 
  mutate(training_sample = rbinom(n = nrow(m4), 1, 0.7))


# Generamos id único por individuo
m4<-unite(m4, "id_indiv", c("folioviv","foliohog","numren"))

m4_train <- subset(m4, training_sample==1)
m4_test  <- subset(m4, training_sample==0)

# Matriz de covariates

m4_train$training_sample<-NULL

m4_train<-m4_train%>%arrange(id_indiv)

XX<-m4_train%>%ungroup()%>%select(-id_indiv,-prospera,-secundaria,-acc_alim1,-trabinf)
library(gamlr)
X<-sparse.model.matrix(~.+0, data = XX)

  prosper<-m4_train$prospera
  sec_term<-m4_train$secundaria
  acc_al<-m4_train$acc_alim1
  informal<-m4_train$trabinf


# Creamos la k aleatoriamente
library(RCT)
k<-treatment_assign(data = m4_train, 
                    share_control = 0.2,n_t = 4,  
                    strata_varlist = "id_indiv",
                    missfits = "global",seed = 1900, 
                    key = "id_indiv")$data


k<-  k%>%  mutate(k = treat+1)%>%  ungroup() 

k<-k$k



#Cross-fitting


modelo2<-map_dfr(1:5,
                 function(a) {
                   treat_fit <-gamlr(x = X[k!=a, , drop=F],
                                     y =prosper[k!=a],family="binomial")
                   treat_hat<-as.numeric(predict(treat_fit,
                                                 newdata = X[k==a, , drop= F],
                                                 type = "response"))
                   treat_resid <- prosper[k==a]-treat_hat
                   
                   secundaria_fit <-gamlr(x = X[k!=a, , drop= F],
                                       y = sec_term[k!=a])
                   secundaria_hat<-as.numeric(predict(secundaria_fit,
                                                   newdata = X[k==a, , drop= F],
                                                   type = "response"))
                   secundaria_resid <- sec_term[k==a]-secundaria_hat
                   
                   informal_fit <-gamlr(x = X[k!=a, , drop= F],
                                        y = informal[k!=a])
                   informal_hat<-as.numeric(predict(informal_fit,
                                                    newdata = X[k==a, , drop= F],
                                                    type = "response"))
                   informal_resid <- informal[k==a]-informal_hat
                   
                  
                  acceso_fit <-gamlr(x = X[k!=a, , drop= F],
                                      y = acc_al[k!=a])
                   acceso_hat<-as.numeric(predict(acceso_fit,
                                                  newdata = X[k==a, , drop= F],
                                                  type = "response"))
                   acceso_resid <- acc_al[k==a]-acceso_hat
                   
                   fits<-bind_cols("treat_hat" = treat_hat,
                                    "treat_resid" = treat_resid,
                                   "secundaria_hat"= secundaria_hat,
                                   "secundaria_resid" = secundaria_resid,
                                   "informal_hat"= informal_hat,
                                   "informal_resid" = informal_resid,
                                   "acceso_hat"= acceso_hat,
                                   "acceso_resid" = acceso_resid)
                                   
                                    })

## ATEs
library(stargazer)
ate_acceso<-lm(acceso_resid~treat_resid, data=modelo2) 
ate_secundaria<-lm(secundaria_resid~treat_resid, data=modelo2) 
ate_informal<-lm(informal_resid~treat_resid, data=modelo3) 
stargazer(ate_acceso,ate_secundaria,ate_informal,type="text")

##  DDML Lasso
## Generamos una matriz X sparse,que incluye resid_treat y las interacciones de x con resid_treat

T_resid<-modelo2$treat_resid
XX$treat_resid<-with(XX,T_resid)

# Matriz sparse con interacciones
X1<-sparse.model.matrix(~.+0+treat_resid*., data = XX)
dim(X1)
## Generamos Y´s
Yacceso<-modelo2$acceso_resid
Ysecundaria<-modelo2$secundaria_resid
Yinformal<-modelo2$informal_resid

## LASSO 
hte_acceso<-gamlr(x = X1, y =Yacceso)
coef_acceso<-as.matrix(coef(hte_acceso))
coef_acceso<-tibble(variable =rownames(coef_acceso),coeficiente = coef_acceso[,1])
coef_acceso<-coef_acceso%>% filter(coeficiente!=0)
kbl(coef_acceso, booktabs = T, caption = "<center><strong>Variables significativas</strong></center>") %>% kable_classic_2(full_width = F, html_font = "Cambria", fixed_thead = T)


hte_secundaria<-gamlr(x = X1, y =Ysecundaria)
coef_secundaria<-as.matrix(coef(hte_secundaria))
coef_secundaria<-tibble(variable =rownames(coef_secundaria),coeficiente = coef_secundaria[,1])
coef_secundaria<-coef_secundaria%>% filter(coeficiente!=0)
kbl(coef_secundaria, booktabs = T, caption = "<center><strong>Variables significativas</strong></center>") %>% kable_classic_2(full_width = F, html_font = "Cambria", fixed_thead = T)



hte_informal<-gamlr(x = X1, y =Yinformal)
coef_informal<-as.matrix(coef(hte_informal))
coef_informal<-tibble(variable =rownames(coef_informal),coeficiente = coef_informal[,1])
coef_informal<-coef_informal%>% filter(coeficiente!=0)
kbl(coef_informal, booktabs = T, caption = "<center><strong>Variables significativas</strong></center>") %>% kable_classic_2(full_width = F, html_font = "Cambria", fixed_thead = T)


pred_acceso<-as.numeric(predict(hte_acceso, newdata=X1, type="response"))
pred_acceso<-as.data.frame(pred_acceso)
colnames(pred_acceso)<-"Impacto_acceso"

pred_secundaria<-as.numeric(predict(hte_secundaria, newdata=X1, type="response"))
pred_secundaria<-as.data.frame(pred_secundaria)
colnames(pred_secundaria)<-"Impacto_secundaria"


pred_informal<-as.numeric(predict(hte_informal, newdata=X1, type="response"))
pred_informal<-as.data.frame(pred_informal)
colnames(pred_informal)<-"Impacto_informal"

id_indiv<-m4_train$id_indiv
predicciones<-cbind.data.frame(id_indiv,pred_acceso,pred_secundaria,pred_informal)




